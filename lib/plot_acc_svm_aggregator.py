import json
import numpy as np
import os.path as osp
import pickle
import gcforest.data_load as load
import pandas as pd
from sklearn.svm import SVC
from sklearn.model_selection import StratifiedKFold, cross_val_score

data_sets = ["cirrhosis", 'obesity', 't2d']
feature_sets = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50]
# feature_len = [542, 572, 465]

clf_svm = SVC(kernel='linear')
cv = StratifiedKFold(n_splits=5, shuffle=False, random_state=0)

for k, data_name in enumerate(data_sets):
    print("==================")
    print(data_name)
    ll = []

    X, y = None, None

    if data_name == 'obesity':
        X, y = load.obesity_data()
    elif data_name == 'cirrhosis':
        X, y = load.cirrhosis_data()
    else:
        X, y = load.t2d_data()

    clf_acc_before = cross_val_score(clf_svm, X, y, cv=cv, scoring='accuracy')
    print(np.mean(clf_acc_before))

    for feat in feature_sets:
        llm = []
        print("------------")
        # ###### deep forest

        # AVERAGE
        # df = pd.read_csv(data_name + '_importance.csv',header=None)
        # li_idx = df.iloc[:,0].values
        # X_hat = X.iloc[:, li_idx[0:feat]]
        # clf_acc_df = cross_val_score(clf_svm, X_hat, y, cv=cv, scoring='accuracy')
        # clf_acc_df = np.mean(clf_acc_df)
        # print(clf_acc_df)
        # llm.append(clf_acc_df)

        # #RRA
        # li_idx = [153, 102, 105, 48, 171, 199, 226, 28, 58, 162, 103, 98, 210, 33, 13, 148, 23, 154, 345, 101, 45, 39, 68, 49, 22, 198, 149, 119, 132, 193, 38, 46, 220, 111, 74, 47, 72, 14, 131, 37, 29, 128, 77, 41, 124, 55, 73, 135, 158, 75, 156, 140, 152, 130, 123, 211, 80, 177, 57, 117, 35, 142, 91, 136, 125, 56, 165, 222, 122, 127, 97, 19, 206, 160, 76, 161, 40, 181, 144, 139, 205, 347, 53, 203, 157, 90, 258, 108, 43, 221, 196, 212, 84, 34, 145, 42, 170, 36, 50, 197, 163, 16, 30, 106, 10, 204, 146, 166, 359, 169, 357, 358, 255, 70, 384, 155, 230, 141, 31, 354, 178, 25, 24, 306, 143, 134, 240, 51, 8, 356, 535, 195, 65, 219, 179, 310, 187, 363, 182, 213, 323, 217, 172, 150, 96, 278, 329, 52, 176, 126, 327, 151, 342, 64, 223, 104, 100, 66, 94, 185, 164, 331, 250, 79, 207, 92, 519, 325, 216, 78, 269, 394, 317, 275, 11, 267, 314, 120, 186, 289, 349, 67, 350, 447, 32, 247, 168, 332, 271, 361, 313, 1, 0, 190, 110, 405, 192, 189, 54, 499, 21, 360, 241, 352, 251, 280, 138, 274, 69, 188, 109, 159, 26, 174, 340, 351, 263, 338, 88, 383, 93, 12, 326, 390, 208, 20, 370, 99, 299, 218, 253, 243, 297, 246, 298, 372, 273, 113, 225, 147, 4, 277, 285, 429, 59, 367, 85, 538, 435, 268, 376, 371, 183, 5, 173, 401, 209, 15, 184, 71, 244, 63, 403, 9, 194, 304, 17, 129, 81, 2, 322, 396, 180, 353, 201, 406, 375, 112, 434, 496, 137, 302, 391, 527, 175, 62, 202, 309, 466, 282, 319, 377, 259, 300, 443, 60, 133, 397, 89, 245, 438, 336, 82, 231, 311, 539, 364, 428, 86, 95, 283, 497, 355, 260, 18, 115, 272, 248, 296, 312, 427, 374, 433, 107, 398, 540, 457, 555, 467, 520, 301, 288, 328, 321, 279, 303, 238, 270, 293, 83, 430, 459, 265, 320, 232, 308, 445, 6, 121, 417, 395, 432, 419, 385, 414, 408, 242, 235, 256, 400, 416, 382, 486, 344, 418, 276, 494, 366, 470, 409, 307, 404, 422, 392, 381, 236, 316, 458, 229, 399, 7, 387, 490, 378, 228, 379, 524, 261, 44, 254, 505, 521, 116, 227, 290, 343, 393, 493, 557, 286, 294, 562, 507, 431, 425, 506, 462, 465, 324, 281, 504, 518, 402, 315, 305, 237, 318, 386, 333, 500, 536, 284, 348, 114, 440, 292, 525, 537, 564, 335, 200, 481, 337, 543, 389, 550, 479, 369, 339, 27, 448, 3, 291, 167, 498, 380, 234, 563, 565, 533, 463, 509, 492, 436, 407, 426, 424, 531, 461, 560, 472, 516, 214, 87, 257, 503, 534, 421, 491, 460, 567, 510, 287, 480, 508, 439, 191, 495, 415, 489, 482, 484, 551, 233, 334, 61, 552, 469, 553, 455, 554, 474, 569, 561, 570, 410, 224, 547, 365, 373, 464, 411, 526, 446, 556, 420, 523, 477, 215, 451, 548, 252, 475, 346, 456, 413, 517, 544, 571, 388, 450, 487, 118, 558, 412, 512, 515, 545, 568, 262, 437, 530, 541, 473, 476, 423, 264, 266, 478, 454, 502, 546, 442, 529, 514, 559, 452, 330, 532, 449, 528, 513, 485, 362, 453, 341, 501, 468, 239, 511, 566, 488, 549, 542, 444, 295, 471, 441, 522, 249, 483, 368]
        # X_hat = X.iloc[:, li_idx[0:feat]]
        # clf_acc_df = cross_val_score(clf_svm, X_hat, y, cv=cv, scoring='accuracy')
        # clf_acc_df = np.mean(clf_acc_df)
        # print(clf_acc_df)
        # llm.append(clf_acc_df)
        #
        # #MEAN
        # li_idx = [153, 48, 105, 28, 226, 102, 171, 162, 199, 58, 103, 98, 210, 154, 33, 148, 68, 23, 39, 45, 13, 22, 149, 345, 101, 47, 119, 220, 198, 49, 131, 193, 158, 38, 132, 55, 140, 46, 125, 123, 37, 29, 128, 177, 111, 14, 72, 135, 74, 142, 124, 156, 77, 73, 41, 122, 75, 57, 56, 130, 165, 211, 117, 91, 19, 35, 152, 136, 206, 80, 222, 160, 146, 76, 139, 127, 161, 97, 157, 258, 144, 90, 221, 70, 53, 205, 347, 40, 84, 34, 170, 42, 203, 181, 145, 230, 36, 166, 24, 108, 359, 16, 50, 43, 25, 196, 197, 10, 204, 212, 255, 163, 143, 106, 30, 51, 357, 169, 141, 31, 134, 354, 384, 310, 178, 306, 358, 323, 176, 155, 219, 8, 104, 535, 126, 195, 240, 363, 217, 187, 356, 65, 100, 179, 342, 182, 96, 327, 164, 150, 213, 329, 278, 66, 331, 250, 223, 151, 52, 64, 185, 172, 94, 519, 186, 207, 78, 168, 216, 349, 317, 79, 325, 371, 269, 350, 11, 120, 275, 92, 267, 394, 405, 247, 271, 314, 447, 289, 0, 67, 332, 32, 313, 361, 189, 1, 251, 110, 190, 263, 352, 54, 192, 20, 360, 188, 21, 280, 499, 274, 69, 241, 370, 138, 159, 109, 26, 351, 299, 338, 174, 93, 253, 4, 340, 88, 12, 99, 429, 113, 85, 326, 208, 390, 435, 5, 383, 246, 218, 285, 372, 298, 225, 273, 367, 147, 277, 243, 59, 209, 17, 137, 538, 297, 376, 268, 173, 377, 304, 401, 63, 184, 15, 129, 244, 71, 9, 353, 60, 194, 201, 183, 82, 202, 180, 403, 2, 81, 396, 375, 391, 309, 112, 322, 434, 270, 497, 265, 175, 466, 496, 406, 259, 397, 527, 62, 319, 86, 115, 300, 282, 302, 539, 355, 433, 443, 89, 133, 438, 272, 312, 364, 260, 428, 311, 520, 296, 231, 107, 320, 336, 245, 398, 288, 283, 18, 408, 445, 430, 427, 374, 95, 248, 328, 395, 83, 540, 308, 467, 457, 301, 432, 279, 238, 121, 321, 459, 6, 555, 419, 400, 417, 385, 303, 256, 232, 470, 293, 414, 494, 560, 307, 404, 366, 235, 305, 381, 242, 344, 276, 486, 379, 399, 409, 236, 422, 292, 418, 316, 7, 416, 500, 382, 167, 518, 458, 389, 561, 392, 490, 228, 61, 563, 286, 44, 227, 479, 524, 27, 552, 463, 318, 343, 333, 378, 386, 481, 521, 565, 393, 387, 415, 116, 431, 505, 290, 229, 440, 465, 436, 425, 346, 531, 254, 234, 426, 567, 369, 315, 348, 281, 3, 407, 557, 237, 261, 493, 562, 506, 507, 339, 504, 469, 402, 525, 284, 549, 337, 483, 324, 564, 294, 462, 537, 87, 492, 456, 498, 503, 191, 536, 335, 455, 569, 533, 291, 543, 448, 444, 508, 471, 566, 550, 287, 233, 239, 473, 491, 214, 460, 510, 489, 468, 522, 341, 114, 472, 495, 424, 249, 554, 439, 380, 200, 437, 373, 509, 252, 461, 446, 484, 421, 410, 526, 516, 334, 482, 420, 215, 295, 257, 551, 553, 388, 530, 451, 534, 480, 478, 464, 556, 441, 411, 548, 365, 477, 571, 450, 475, 474, 558, 570, 487, 568, 262, 528, 412, 224, 517, 513, 523, 546, 542, 442, 532, 118, 547, 454, 452, 559, 544, 413, 264, 511, 545, 476, 515, 512, 368, 541, 488, 423, 514, 502, 453, 266, 529, 449, 501, 330, 485, 362]
        # X_hat = X.iloc[:, li_idx[0:feat]]
        # clf_acc_df = cross_val_score(clf_svm, X_hat, y, cv=cv, scoring='accuracy')
        # clf_acc_df= np.mean(clf_acc_df)
        # print(clf_acc_df)
        # llm.append(clf_acc_df)
        #
        #
        # #geom.mean
        # li_idx = [153, 48, 226, 162, 105, 28, 102, 171, 199, 58, 33, 148, 103, 210, 98, 154, 68, 23, 45, 39, 149, 22, 13, 345, 47, 158, 101, 125, 119, 220, 198, 131, 123, 49, 193, 177, 140, 38, 55, 46, 132, 29, 37, 128, 135, 142, 124, 111, 14, 72, 77, 74, 156, 73, 122, 75, 41, 57, 165, 130, 117, 19, 56, 258, 35, 206, 91, 211, 152, 146, 160, 136, 222, 80, 139, 76, 127, 221, 161, 157, 97, 90, 144, 70, 84, 53, 170, 347, 34, 205, 40, 42, 203, 181, 145, 230, 24, 36, 166, 16, 359, 108, 50, 25, 43, 204, 10, 197, 196, 212, 255, 143, 163, 51, 106, 30, 357, 141, 169, 134, 31, 310, 354, 384, 178, 323, 176, 306, 358, 155, 219, 104, 8, 535, 126, 195, 240, 217, 363, 187, 100, 356, 65, 342, 179, 182, 327, 96, 164, 150, 329, 213, 331, 66, 250, 278, 223, 52, 151, 64, 185, 172, 94, 519, 186, 371, 207, 78, 349, 168, 216, 317, 269, 325, 79, 350, 120, 11, 275, 92, 267, 394, 405, 247, 271, 314, 447, 289, 0, 67, 32, 332, 313, 189, 361, 251, 1, 110, 263, 190, 352, 20, 54, 192, 360, 188, 21, 280, 274, 69, 499, 241, 370, 159, 138, 109, 351, 299, 26, 338, 174, 93, 253, 4, 340, 88, 12, 99, 429, 113, 85, 326, 208, 390, 435, 5, 383, 246, 218, 285, 298, 372, 367, 273, 225, 277, 147, 243, 59, 209, 17, 137, 538, 268, 376, 297, 377, 173, 304, 401, 184, 63, 60, 15, 129, 244, 353, 9, 71, 194, 201, 202, 82, 183, 180, 403, 265, 2, 81, 396, 270, 309, 375, 391, 112, 322, 497, 434, 175, 466, 496, 406, 259, 397, 527, 62, 319, 115, 86, 300, 282, 302, 539, 355, 433, 272, 443, 312, 89, 133, 438, 364, 260, 520, 311, 428, 296, 320, 231, 107, 336, 245, 398, 288, 445, 408, 283, 18, 430, 427, 374, 248, 95, 395, 328, 83, 540, 308, 467, 457, 301, 432, 279, 121, 238, 321, 459, 6, 400, 419, 555, 256, 417, 385, 303, 232, 470, 414, 293, 494, 560, 307, 404, 366, 409, 235, 305, 381, 422, 242, 344, 399, 276, 379, 486, 236, 292, 418, 7, 316, 500, 416, 167, 382, 518, 561, 389, 458, 392, 228, 61, 490, 563, 286, 44, 227, 524, 479, 27, 552, 463, 343, 318, 378, 333, 386, 481, 521, 565, 393, 387, 116, 431, 415, 229, 290, 505, 465, 425, 254, 440, 346, 436, 3, 531, 407, 281, 315, 426, 567, 234, 557, 348, 369, 237, 562, 493, 261, 506, 507, 339, 504, 525, 402, 549, 469, 284, 483, 337, 324, 564, 294, 492, 462, 537, 87, 191, 503, 498, 456, 536, 455, 335, 569, 533, 291, 444, 448, 471, 508, 543, 566, 550, 233, 287, 239, 491, 460, 510, 214, 473, 489, 468, 522, 341, 114, 249, 495, 472, 424, 554, 380, 439, 200, 437, 373, 509, 252, 461, 446, 421, 484, 410, 526, 516, 334, 295, 482, 215, 420, 257, 551, 553, 388, 530, 451, 534, 478, 480, 464, 556, 441, 548, 411, 477, 571, 450, 365, 475, 474, 558, 570, 568, 487, 528, 262, 224, 412, 517, 513, 523, 546, 542, 442, 532, 118, 547, 454, 452, 559, 544, 413, 511, 264, 545, 476, 515, 512, 368, 541, 488, 423, 514, 502, 453, 266, 529, 449, 501, 330, 485, 362]
        # X_hat = X.iloc[:, li_idx[0:feat]]
        # clf_acc_df = cross_val_score(clf_svm, X_hat, y, cv=cv, scoring='accuracy')
        # clf_acc_df = np.mean(clf_acc_df)
        # print(clf_acc_df)
        # llm.append(clf_acc_df)
        output_dir = osp.join("output", "result")
        mat = []
        for i in range(5):
            path = osp.join(output_dir, data_name + "-cv-" + str(i))
            file = open(path, 'r')
            dicts = json.load(file)

            df = pd.Series(dicts)
            df = df.sort_values(ascending=False)

            li = list(map(int, df.index.values.tolist()))
            X_hat = X.iloc[:, li[0:feat]]
            clf_acc_after = cross_val_score(clf_svm, X_hat, y, cv=cv, scoring='accuracy')
            clf_acc_df = np.mean(clf_acc_after)
            mat.append(clf_acc_df)
        llm.append(np.mean(mat))
        ######reliefF
        output_dir = osp.join("output", "reliefF")
        ma = []
        for i in range(5):
            path = osp.join(output_dir, data_name + "-cv-" + str(i))
            with open(path, 'rb') as file:
                li = pickle.load(file)
            X_hat = X.iloc[:, li[0:feat]]
            clf_acc_after = cross_val_score(clf_svm, X_hat, y, cv=cv, scoring='accuracy')
            ma.append(clf_acc_after)
        llm.append(np.mean(ma))

        ######mRMR
        output_dir = osp.join("output", "mRMR")
        ma = []
        for i in range(5):
            path = osp.join(output_dir, data_name + "-cv-" + str(i))
            with open(path, 'rb') as file:
                li = pickle.load(file)
            X_hat = X.iloc[:, li[0:feat]]
            clf_acc_after = cross_val_score(clf_svm, X_hat, y, cv=cv, scoring='accuracy')
            ma.append(clf_acc_after)
        llm.append(np.mean(ma))

        ####SVM-RFE
        output_dir = osp.join("output", "svm-ref")
        ma = []
        for i in range(5):
            path = osp.join(output_dir, data_name + "-cv-" + str(i))
            with open(path, 'r') as file:
                dicts = json.load(file)

            df = pd.Series(dicts)
            df = df.sort_values(ascending=True)
            li = df.index.tolist()[0:feat]
            li = list(map(int, df.index.tolist()[0:feat]))
            X_hat = X.iloc[:, li]

            clf_acc_after = cross_val_score(clf_svm, X_hat, y, cv=cv, scoring='accuracy')
            ma.append(clf_acc_after)
        llm.append(np.mean(ma))

        ll.append(llm)
    dd = pd.DataFrame(ll, columns=['Deep Forest', 'ReliefF', 'mRMR', 'SVM-RFE'],
                      index=['5', '10', '15', '20', '25', '30', '35', '40', '45', '50'])
    dd.to_csv(data_name + "-SVM-ACC")
